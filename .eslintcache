
[{"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\index.tsx":"1","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\serviceWorker.ts":"2","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\redux-store.ts":"3","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\App.tsx":"4","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\dialogs-reducer.ts":"5","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\profile-reducer.ts":"6","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-reducer.ts":"7","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\sidebar-reducer.ts":"8","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\Header.tsx":"9","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Navbar\\Navbar.tsx":"10","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\News\\News.tsx":"11","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\Profile.tsx":"12","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogsContainer.tsx":"13","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Music\\Music.tsx":"14","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Settings\\Settings.tsx":"15","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Dialogs.tsx":"16","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"17","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\MyPostsContainer.tsx":"18","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"19","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Message\\Message.tsx":"20","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"21","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"22","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\Users.tsx":"24","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileContainer.tsx":"25","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\Preloader\\Preloader.tsx":"26","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\auth-reducer.ts":"27","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\api\\api.ts":"29","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Login\\Login.tsx":"30","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\hoc\\withAuthRedirect.tsx":"31","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\store.ts":"33","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\utils\\validators\\validators.ts":"34","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\FormsControls\\FormsControls.tsx":"35","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\app-reducer.ts":"36","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-selectors.ts":"37","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"38","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"39","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\User.tsx":"40","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\Paginator\\Paginator.tsx":"41"},{"size":488,"mtime":1616320833330,"results":"42","hashOfConfig":"43"},{"size":5295,"mtime":1607086573970,"results":"44","hashOfConfig":"43"},{"size":2131,"mtime":1616238442671,"results":"45","hashOfConfig":"43"},{"size":2657,"mtime":1616321580786,"results":"46","hashOfConfig":"43"},{"size":1333,"mtime":1610967642161,"results":"47","hashOfConfig":"43"},{"size":3333,"mtime":1615725332385,"results":"48","hashOfConfig":"43"},{"size":5178,"mtime":1615729453907,"results":"49","hashOfConfig":"43"},{"size":283,"mtime":1608545073454,"results":"50","hashOfConfig":"43"},{"size":1025,"mtime":1616321497173,"results":"51","hashOfConfig":"43"},{"size":3539,"mtime":1613749234693,"results":"52","hashOfConfig":"43"},{"size":183,"mtime":1602851383400,"results":"53","hashOfConfig":"43"},{"size":714,"mtime":1613208113120,"results":"54","hashOfConfig":"43"},{"size":1330,"mtime":1613150815792,"results":"55","hashOfConfig":"43"},{"size":189,"mtime":1602851387551,"results":"56","hashOfConfig":"43"},{"size":201,"mtime":1602851984739,"results":"57","hashOfConfig":"43"},{"size":1398,"mtime":1616321497141,"results":"58","hashOfConfig":"43"},{"size":2097,"mtime":1613379446405,"results":"59","hashOfConfig":"43"},{"size":955,"mtime":1612717880768,"results":"60","hashOfConfig":"43"},{"size":479,"mtime":1613386129528,"results":"61","hashOfConfig":"43"},{"size":293,"mtime":1613382956185,"results":"62","hashOfConfig":"43"},{"size":2143,"mtime":1615551774042,"results":"63","hashOfConfig":"43"},{"size":736,"mtime":1613378672672,"results":"64","hashOfConfig":"43"},{"size":3516,"mtime":1615738967975,"results":"65","hashOfConfig":"43"},{"size":1678,"mtime":1615741242533,"results":"66","hashOfConfig":"43"},{"size":2615,"mtime":1613154270242,"results":"67","hashOfConfig":"43"},{"size":261,"mtime":1613479439235,"results":"68","hashOfConfig":"43"},{"size":2236,"mtime":1615724863412,"results":"69","hashOfConfig":"43"},{"size":762,"mtime":1611647124211,"results":"70","hashOfConfig":"43"},{"size":2635,"mtime":1615727847629,"results":"71","hashOfConfig":"43"},{"size":2972,"mtime":1615732452741,"results":"72","hashOfConfig":"43"},{"size":901,"mtime":1610454686282,"results":"73","hashOfConfig":"43"},{"size":1706,"mtime":1610627239105,"results":"74","hashOfConfig":"43"},{"size":2783,"mtime":1610971297244,"results":"75","hashOfConfig":"43"},{"size":403,"mtime":1611663268681,"results":"76","hashOfConfig":"43"},{"size":1495,"mtime":1615733064939,"results":"77","hashOfConfig":"43"},{"size":946,"mtime":1613060395444,"results":"78","hashOfConfig":"43"},{"size":845,"mtime":1612272171560,"results":"79","hashOfConfig":"43"},{"size":946,"mtime":1613751147969,"results":"80","hashOfConfig":"43"},{"size":1379,"mtime":1613233305123,"results":"81","hashOfConfig":"43"},{"size":1748,"mtime":1615741242526,"results":"82","hashOfConfig":"43"},{"size":791,"mtime":1615736427162,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6vtig",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"162"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\index.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\serviceWorker.ts",[],["184","185"],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\redux-store.ts",["186"],"import {applyMiddleware, combineReducers, compose, createStore, Store} from \"redux\";\r\nimport dialogsReducer, {sendMessageAC} from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport profileReducer, {addPostAC, deletePost, setStatus, setUserProfile} from \"./profile-reducer\";\r\nimport usersReducer, {\r\n    followSuccess,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setUsersTotalCount,\r\n    toggleFollowingProgress,\r\n    toggleIsFetching,\r\n    unfollowSuccess\r\n} from \"./users-reducer\";\r\nimport authReducer, {setAuthUserData} from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer, {reducer as formReducer} from 'redux-form'\r\nimport appReducer, {initializedSuccess} from \"./app-reducer\";\r\n\r\nexport type FollowSuccessType = ReturnType<typeof followSuccess>;\r\nexport type UnfollowSuccessType = ReturnType<typeof unfollowSuccess>;\r\nexport type ActionsTypes = ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof sendMessageAC> |\r\n    FollowSuccessType |\r\n    UnfollowSuccessType |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setUsersTotalCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setAuthUserData> |\r\n    ReturnType<typeof toggleFollowingProgress> |\r\n    ReturnType<typeof setStatus>|\r\n    ReturnType<typeof initializedSuccess> |\r\n    ReturnType<typeof deletePost>\r\n\r\n\r\nconst reducers = combineReducers({\r\n    DialogsPage: dialogsReducer,\r\n    ProfilePage: profileReducer,\r\n    UsersPage: usersReducer,\r\n    Sidebar: sidebarReducer,\r\n    Auth: authReducer,\r\n    form: formReducer,\r\n    App: appReducer\r\n});\r\n\r\n\r\nexport type RootStateRedux = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// @ts-ignore\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\ntype Window = typeof window & { store: Store }\r\n(window as Window).store = store;\r\n\r\nexport default store;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\App.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\dialogs-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\profile-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-reducer.ts",["187"],"import {ActionsTypes, FollowSuccessType, RootStateRedux, UnfollowSuccessType} from \"./redux-store\";\r\nimport {CommonDeletePostFollowResponseType, usersAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number\r\n    photos: {\r\n        \"small\": string,\r\n        \"large\": string\r\n    }\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\n\r\nexport type InitialUsersPageType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport type ThunkActionType = ThunkAction<void, RootStateRedux, unknown, ActionsTypes>;\r\n\r\nconst usersReducer = (state: InitialUsersPageType = initialState, action: ActionsTypes): InitialUsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId}) as const\r\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId}) as const\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users}) as const\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}) as const\r\nexport const setUsersTotalCount = (setUsersTotalCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: setUsersTotalCount\r\n}) as const\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching}) as const\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n}) as const\r\n\r\n\r\n// export type ThunkDispatchType = ThunkDispatchType<RootStateRedux, unknown, ActionsTypes>;\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkActionType => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n        dispatch(toggleIsFetching(false));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number,\r\n                                  apiMethod: any /*(userId: number) => CommonDeletePostFollowResponseType*/,\r\n                                  actionCreator: (userId: number) => FollowSuccessType | UnfollowSuccessType) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkActionType => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkActionType => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\sidebar-reducer.ts",["188"],"import {RootStateType, SidebarType} from \"./store\";\r\nimport {ActionsTypes} from \"./redux-store\";\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state: SidebarType = initialState, action: ActionsTypes): SidebarType => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\Header.tsx",["189","190"],"import React from \"react\";\r\nimport './Header.module.css';\r\nimport headerStyle from './Header.module.css';\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faChessQueen} from \"@fortawesome/free-solid-svg-icons/faChessQueen\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props: HeaderPropsType) {\r\n    return (\r\n        <header className={headerStyle.header}>\r\n            <div className={headerStyle.logo}><FontAwesomeIcon icon={faChessQueen} className={headerStyle.fa}/> social network</div>\r\n           {/* <Navbar/>*/}\r\n            <div className={headerStyle.loginBlock}>{props.isAuth ?\r\n                    <div className={headerStyle.loggedName}>{props.login}<button onClick={props.logout}>Log\r\n                        out</button></div>\r\n                    : <NavLink to={\"/login\"}>Log in</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\News\\News.tsx",["191"],"import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nfunction News() {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\Profile.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Music\\Music.tsx",["192"],"import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nfunction Music() {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Settings\\Settings.tsx",["193"],"import React from \"react\";\r\nimport classes from \"./Settings.module.css\"\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Dialogs.tsx",["194","195"],"import React from \"react\";\r\nimport dialogStyles from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/state\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nexport type PropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: (newMessageBody: string) => void\r\n    dialogsPage: DialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype NewMessageBodyType = {\r\n    newMessageBody: string\r\n}\r\n\r\nfunction Dialogs(props: PropsType) {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n    function addNewMessage(values: any) {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    // if (!props.isAuth) return <Redirect to='/login'/>;\r\n\r\n    return (\r\n        <div className={dialogStyles.dialogs}>\r\n\r\n            <div className={dialogStyles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={dialogStyles.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["196"],"import React from \"react\";\r\nimport profileInfoStyles from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport {UserProfileResponseType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileResponseType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n\r\n        <div className={profileInfoStyles.descriptionBlock}>\r\n            <div className={profileInfoStyles.profileItemLeft}>\r\n                <div className={`${profileInfoStyles.profileInfoItems} ${profileInfoStyles.profileImg}`}>\r\n                    <img src={props.profile.photos.large}/>\r\n                </div>\r\n\r\n                <div className={` ${profileInfoStyles.profileInfoItems} ${profileInfoStyles.fullName}`}>{props.profile.fullName}</div>\r\n                <div className={profileInfoStyles.statusMark}>Write your status:</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n            <div className={profileInfoStyles.profileItemRight}>\r\n                <div className= {profileInfoStyles.jobDescription}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>Looking for a job:</div>\r\n                    <div>{props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n\r\n                <div className= {profileInfoStyles.aboutMeInfo}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>About me:</div>\r\n                    <div>{props.profile.aboutMe}</div>\r\n                </div>\r\n\r\n                <div className={profileInfoStyles.contacts}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>My contacts:</div>\r\n                    {/*<div>{props.profile.contacts}</div>*/}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\MyPostsContainer.tsx",["197"],"import React, {Dispatch} from \"react\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostAC} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"../../../../redux/store\";\r\nimport {RootStateRedux} from \"../../../../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): mapStatePropsType => {\r\n    return {\r\n        posts: state.ProfilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>): mapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\Users.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\Preloader\\Preloader.tsx",["198"],"import React from \"react\";\r\nimport loader from \"../../../assets/images/load.gif\";\r\nimport preloaderStyle from \"./loader.module.css\";\r\n\r\nexport function Preloader() {\r\n    return <div className={preloaderStyle.loader}>\r\n        <img src={loader}/>\r\n    </div>\r\n}","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\auth-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\api\\api.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Login\\Login.tsx",["199"],"import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport styles from \"../common/FormsControls/FormsControls.module.css\";\r\nimport loginStyles from \"./Login.module.css\";\r\n\r\ntype LoginFormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport const LoginForm: React.FunctionComponent<InjectedFormProps<LoginFormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={loginStyles.fieldBox}>\r\n                <span>Email</span>\r\n               {/* {CreateField(\"email\", \"email\", [required], Input)}*/}\r\n                 <Field  placeholder={'email'} name={'email'} validate={[required]} component={Input}/>\r\n            </div>\r\n            <div className={loginStyles.fieldBox}>\r\n                <span>Password</span>\r\n                {/*{CreateField(\"Password\", \"password\", [required], Input,{type: 'password'} )}*/}\r\n                <Field placeholder={'Password'} name={'password'} type={'password'} validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div className={loginStyles.rememberMe}>\r\n                <Field classname={loginStyles.checkBox} type={'checkbox'} name={'rememberMe'} component={Input}/>\r\n                <label>remember me</label>\r\n\r\n            </div>\r\n            <div className={loginStyles.fieldBox}>\r\n                <button>Login</button>\r\n            </div>\r\n            {error && <div className={styles.formSummeryError}>\r\n                {error}\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormDataType>({form: 'login'})(LoginForm)\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype LoginPropsType = MapDispatchPropsType & MapStatePropsType;\r\n\r\nconst Login: React.FunctionComponent<LoginPropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={loginStyles.loginContentBox}>\r\n            <div className={loginStyles.formBox}>\r\n                <h1>login</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateRedux): MapStatePropsType => ({\r\n    isAuth: state.Auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["200","201"],"import React, {ChangeEvent} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport {ReactComponent} from \"*.svg\";\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component <ProfileStatusType> {\r\n    statusInputRef = React.createRef()\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\ndebugger\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["202","203"],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\store.ts",["204","205"],"import profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport { UserType} from \"./users-reducer\";\r\nimport {ActionsTypes} from \"./redux-store\";\r\nimport {UserProfileResponseType} from \"../components/Profile/ProfileContainer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profile: null | UserProfileResponseType\r\n    status: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n\r\n}\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n}\r\n\r\nexport type RootStateType = {\r\n    ProfilePage: ProfilePageType\r\n    DialogsPage: DialogsPageType\r\n    Sidebar: SidebarType\r\n}\r\n\r\nexport type SidebarType = {}\r\n\r\n\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    getState: () => RootStateType\r\n    _onChange: () => void\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nlet store: StoreType = {\r\n    _state: {\r\n        ProfilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you?', likesCount: 23},\r\n                {id: 2, message: \"It's my first post\", likesCount: 14},\r\n                {id: 3, message: \"BalBla\", likesCount: 14},\r\n                {id: 4, message: \"DaDa\", likesCount: 14}\r\n            ],\r\n            profile: null,\r\n            status: ''\r\n        },\r\n        DialogsPage: {\r\n            messages: [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How is your it-kamasutra?\"},\r\n                {id: 3, message: \"Yo\"},\r\n                {id: 4, message: \"Yo\"},\r\n                {id: 5, message: \"Yo\"}\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: \"Dimych\"},\r\n                {id: 2, name: \"Andrey\"},\r\n                {id: 3, name: \"Sveta\"},\r\n                {id: 4, name: \"Sasha\"},\r\n                {id: 5, name: \"Victor\"},\r\n                {id: 6, name: \"Valera\"}\r\n            ]\r\n        },\r\n        Sidebar: {}\r\n    },\r\n    _onChange() {\r\n        console.log(\"state changed\");\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._onChange = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.ProfilePage = profileReducer(this._state.ProfilePage, action)\r\n        this._state.DialogsPage = dialogsReducer(this._state.DialogsPage, action)\r\n        this._state.Sidebar = sidebarReducer(this._state.Sidebar, action)\r\n        this._onChange();\r\n    }\r\n}\r\n\r\n\r\n","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\utils\\validators\\validators.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\FormsControls\\FormsControls.tsx",["206"],"import React, {Component, FC} from \"react\";\r\nimport styles from './FormsControls.module.css';\r\nimport {Field, WrappedFieldProps} from \"redux-form\";\r\nimport {WrappedFieldMetaProps} from \"redux-form/lib/Field\";\r\nimport {FieldValidatorType} from \"../../../utils/validators/validators\";\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps,\r\n    children: React.ReactNode\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder: string | null, name: string, validators: FieldValidatorType[],\r\n                            component: FC<WrappedFieldProps>, props?: { type: string }) => {\r\n    return <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>\r\n}","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\app-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-selectors.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\User.tsx",["207"],"import React from \"react\";\r\nimport usersStyles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/unknown.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype UsersPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    user: UserType\r\n    followingInProgress: number[]\r\n}\r\n\r\n\r\nexport function User({\r\n                         user, followingInProgress,\r\n                         follow,\r\n                         unfollow\r\n                     }: UsersPropsType) {\r\n\r\n    return (\r\n        <div className={usersStyles.card}>\r\n            <div className={usersStyles.imgBox}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                         className={usersStyles.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={usersStyles.details}>\r\n\r\n                <h2>{user.name}</h2>\r\n                <span>{user.status}</span>\r\n                <span>{'user.location.country'}</span>\r\n                <span>{'user.location.country'}</span>\r\n\r\n                {user.followed ?\r\n                    <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>Unfollow</button>\r\n\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id);\r\n                              }}>Follow</button>}\r\n            </div>\r\n        </div>)\r\n}","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\Paginator\\Paginator.tsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":16,"column":8,"nodeType":"214","messageId":"215","endLine":16,"endColumn":15},{"ruleId":"212","severity":1,"message":"216","line":2,"column":9,"nodeType":"214","messageId":"215","endLine":2,"endColumn":43},{"ruleId":"212","severity":1,"message":"217","line":1,"column":9,"nodeType":"214","messageId":"215","endLine":1,"endColumn":22},{"ruleId":"212","severity":1,"message":"218","line":4,"column":18,"nodeType":"214","messageId":"215","endLine":4,"endColumn":23},{"ruleId":"212","severity":1,"message":"219","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":14},{"ruleId":"212","severity":1,"message":"220","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"220","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"220","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"221","line":6,"column":9,"nodeType":"214","messageId":"215","endLine":6,"endColumn":17},{"ruleId":"212","severity":1,"message":"222","line":17,"column":6,"nodeType":"214","messageId":"215","endLine":17,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":22,"column":21,"nodeType":"225","endLine":22,"endColumn":60},{"ruleId":"212","severity":1,"message":"226","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":7,"column":9,"nodeType":"225","endLine":7,"endColumn":28},{"ruleId":"212","severity":1,"message":"227","line":3,"column":9,"nodeType":"214","messageId":"215","endLine":3,"endColumn":20},{"ruleId":"212","severity":1,"message":"220","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"228","line":3,"column":9,"nodeType":"214","messageId":"215","endLine":3,"endColumn":23},{"ruleId":"208","replacedBy":"229"},{"ruleId":"210","replacedBy":"230"},{"ruleId":"212","severity":1,"message":"231","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":13},{"ruleId":"212","severity":1,"message":"232","line":60,"column":5,"nodeType":"214","messageId":"215","endLine":60,"endColumn":21},{"ruleId":"212","severity":1,"message":"233","line":1,"column":16,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":25,"column":21,"nodeType":"225","endLine":26,"endColumn":61},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"@typescript-eslint/no-unused-vars","'reducer' is defined but never used.","Identifier","unusedVar","'CommonDeletePostFollowResponseType' is defined but never used.","'RootStateType' is defined but never used.","'Route' is defined but never used.","'Navbar' is defined but never used.","'classes' is defined but never used.","'Redirect' is defined but never used.","'NewMessageBodyType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'CreateField' is defined but never used.","'ReactComponent' is defined but never used.",["234"],["235"],"'thunk' is defined but never used.","'store' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]