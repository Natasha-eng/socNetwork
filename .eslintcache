[{"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\index.tsx":"1","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\serviceWorker.ts":"2","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\redux-store.ts":"3","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\App.tsx":"4","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\dialogs-reducer.ts":"5","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\profile-reducer.ts":"6","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-reducer.ts":"7","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\sidebar-reducer.ts":"8","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\Header.tsx":"9","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Navbar\\Navbar.tsx":"10","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\News\\News.tsx":"11","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\Profile.tsx":"12","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogsContainer.tsx":"13","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Music\\Music.tsx":"14","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Settings\\Settings.tsx":"15","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Dialogs.tsx":"16","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"17","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\MyPostsContainer.tsx":"18","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"19","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Message\\Message.tsx":"20","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"21","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"22","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\Users.tsx":"24","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileContainer.tsx":"25","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\Preloader\\Preloader.tsx":"26","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\auth-reducer.ts":"27","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\api\\api.ts":"29","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Login\\Login.tsx":"30","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\hoc\\withAuthRedirect.tsx":"31","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\store.ts":"33","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\utils\\validators\\validators.ts":"34","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\FormsControls\\FormsControls.tsx":"35","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\app-reducer.ts":"36","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-selectors.ts":"37","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"38","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"39"},{"size":715,"mtime":1607082820977,"results":"40","hashOfConfig":"41"},{"size":5295,"mtime":1607086573970,"results":"42","hashOfConfig":"41"},{"size":1749,"mtime":1611735610011,"results":"43","hashOfConfig":"41"},{"size":2439,"mtime":1614928840273,"results":"44","hashOfConfig":"41"},{"size":1333,"mtime":1610967642161,"results":"45","hashOfConfig":"41"},{"size":3169,"mtime":1613218701629,"results":"46","hashOfConfig":"41"},{"size":5008,"mtime":1613128458253,"results":"47","hashOfConfig":"41"},{"size":283,"mtime":1608545073454,"results":"48","hashOfConfig":"41"},{"size":1072,"mtime":1614928813799,"results":"49","hashOfConfig":"41"},{"size":3539,"mtime":1613749234693,"results":"50","hashOfConfig":"41"},{"size":183,"mtime":1602851383400,"results":"51","hashOfConfig":"41"},{"size":714,"mtime":1613208113120,"results":"52","hashOfConfig":"41"},{"size":1330,"mtime":1613150815792,"results":"53","hashOfConfig":"41"},{"size":189,"mtime":1602851387551,"results":"54","hashOfConfig":"41"},{"size":201,"mtime":1602851984739,"results":"55","hashOfConfig":"41"},{"size":1400,"mtime":1613479116393,"results":"56","hashOfConfig":"41"},{"size":2097,"mtime":1613379446405,"results":"57","hashOfConfig":"41"},{"size":955,"mtime":1612717880768,"results":"58","hashOfConfig":"41"},{"size":479,"mtime":1613386129528,"results":"59","hashOfConfig":"41"},{"size":293,"mtime":1613382956185,"results":"60","hashOfConfig":"41"},{"size":2037,"mtime":1613461393646,"results":"61","hashOfConfig":"41"},{"size":736,"mtime":1613378672672,"results":"62","hashOfConfig":"41"},{"size":3458,"mtime":1613059345409,"results":"63","hashOfConfig":"41"},{"size":2774,"mtime":1613376474487,"results":"64","hashOfConfig":"41"},{"size":2615,"mtime":1613154270242,"results":"65","hashOfConfig":"41"},{"size":261,"mtime":1613479439235,"results":"66","hashOfConfig":"41"},{"size":2393,"mtime":1613150365374,"results":"67","hashOfConfig":"41"},{"size":762,"mtime":1611647124211,"results":"68","hashOfConfig":"41"},{"size":2600,"mtime":1613150365384,"results":"69","hashOfConfig":"41"},{"size":2791,"mtime":1613283772239,"results":"70","hashOfConfig":"41"},{"size":901,"mtime":1610454686282,"results":"71","hashOfConfig":"41"},{"size":1706,"mtime":1610627239105,"results":"72","hashOfConfig":"41"},{"size":2783,"mtime":1610971297244,"results":"73","hashOfConfig":"41"},{"size":403,"mtime":1611663268681,"results":"74","hashOfConfig":"41"},{"size":1082,"mtime":1611667748620,"results":"75","hashOfConfig":"41"},{"size":946,"mtime":1613060395444,"results":"76","hashOfConfig":"41"},{"size":845,"mtime":1612272171560,"results":"77","hashOfConfig":"41"},{"size":946,"mtime":1613751147969,"results":"78","hashOfConfig":"41"},{"size":1379,"mtime":1613233305123,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"x6vtig",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"156"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\index.tsx",[],["172","173"],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\serviceWorker.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\redux-store.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\App.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\dialogs-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\profile-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\sidebar-reducer.ts",["174"],"import {RootStateType, SidebarType} from \"./store\";\r\nimport {ActionsTypes} from \"./redux-store\";\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state: SidebarType = initialState, action: ActionsTypes): SidebarType => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\Header.tsx",["175","176"],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\News\\News.tsx",["177"],"import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nfunction News() {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\Profile.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Music\\Music.tsx",["178"],"import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nfunction Music() {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Settings\\Settings.tsx",["179"],"import React from \"react\";\r\nimport classes from \"./Settings.module.css\"\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Dialogs.tsx",["180","181"],"import React from \"react\";\r\nimport dialogStyles from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/state\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nexport type PropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: (newMessageBody: string) => void\r\n    dialogsPage: DialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\ntype NewMessageBodyType = {\r\n    newMessageBody: string\r\n}\r\n\r\nfunction Dialogs(props: PropsType) {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n    function addNewMessage(values: any) {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    // if (!props.isAuth) return <Redirect to='/login'/>;\r\n\r\n    return (\r\n        <div className={dialogStyles.dialogs}>\r\n\r\n            <div className={dialogStyles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={dialogStyles.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["182"],"import React from \"react\";\r\nimport profileInfoStyles from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport {UserProfileResponseType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileResponseType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n\r\n        <div className={profileInfoStyles.descriptionBlock}>\r\n            <div className={profileInfoStyles.profileItemLeft}>\r\n                <div className={`${profileInfoStyles.profileInfoItems} ${profileInfoStyles.profileImg}`}>\r\n                    <img src={props.profile.photos.large}/>\r\n                </div>\r\n\r\n                <div className={` ${profileInfoStyles.profileInfoItems} ${profileInfoStyles.fullName}`}>{props.profile.fullName}</div>\r\n                <div className={profileInfoStyles.statusMark}>Write your status:</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n            <div className={profileInfoStyles.profileItemRight}>\r\n                <div className= {profileInfoStyles.jobDescription}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>Looking for a job:</div>\r\n                    <div>{props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n\r\n                <div className= {profileInfoStyles.aboutMeInfo}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>About me:</div>\r\n                    <div>{props.profile.aboutMe}</div>\r\n                </div>\r\n\r\n                <div className={profileInfoStyles.contacts}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>My contacts:</div>\r\n                    {/*<div>{props.profile.contacts}</div>*/}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\MyPostsContainer.tsx",["183"],"import React, {Dispatch} from \"react\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostAC} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"../../../../redux/store\";\r\nimport {RootStateRedux} from \"../../../../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): mapStatePropsType => {\r\n    return {\r\n        posts: state.ProfilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>): mapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\Users.tsx",["184"],"import React from \"react\";\r\nimport usersStyles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/unknown.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype UsersType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: number[]\r\n}\r\n\r\n\r\nexport function Users(props: UsersType) {\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={usersStyles.usersContainer}>\r\n\r\n           {/* <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p ? usersStyles.selectedPage : \"\"}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>*/}\r\n\r\n                <div className={usersStyles.container}>\r\n                    {props.users.map(u => <div className={usersStyles.card} key={u.id}>\r\n                        <div className={usersStyles.imgBox}>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                     className={usersStyles.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={usersStyles.details}>\r\n\r\n                                <h2>{u.name}</h2>\r\n                                <span>{u.status}</span>\r\n                                <span>{'u.location.country'}</span>\r\n                                <span>{'u.location.country'}</span>\r\n\r\n                                {u.followed ?\r\n                                    <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                            onClick={() => {\r\n                                                props.unfollow(u.id);\r\n                                            }}>Unfollow</button>\r\n\r\n                                    : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                              onClick={() => {\r\n                                                  props.follow(u.id);\r\n                                              }}>Follow</button>}\r\n\r\n\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n\r\n        </div>)\r\n}","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\Preloader\\Preloader.tsx",["185"],"import React from \"react\";\r\nimport loader from \"../../../assets/images/load.gif\";\r\nimport preloaderStyle from \"./loader.module.css\";\r\n\r\nexport function Preloader() {\r\n    return <div className={preloaderStyle.loader}>\r\n        <img src={loader}/>\r\n    </div>\r\n}","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\auth-reducer.ts",["186","187"],"import {ActionsTypes, RootStateRedux} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionTypes, FormAction, stopSubmit} from \"redux-form\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nexport type InitialAuthPageType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialAuthPageType = initialState, action: ActionsTypes): InitialAuthPageType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            let a = {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n            return a\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n//ActionCreators\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA, payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n}) as const\r\n\r\n//thunks\r\nexport const getAuthUserData = () => (dispatch: Dispatch<ActionsTypes>) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        })\r\n}\r\n\r\nexport type ThunkType = ThunkAction<void, RootStateRedux, unknown, ActionsTypes>;\r\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkType => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch: Dispatch<ActionsTypes>) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n}","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\api\\api.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Login\\Login.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["188","189"],"import React, {ChangeEvent} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport {ReactComponent} from \"*.svg\";\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component <ProfileStatusType> {\r\n    statusInputRef = React.createRef()\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\ndebugger\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["190","191"],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\store.ts",["192","193"],"import profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport { UserType} from \"./users-reducer\";\r\nimport {ActionsTypes} from \"./redux-store\";\r\nimport {UserProfileResponseType} from \"../components/Profile/ProfileContainer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profile: null | UserProfileResponseType\r\n    status: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n\r\n}\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n}\r\n\r\nexport type RootStateType = {\r\n    ProfilePage: ProfilePageType\r\n    DialogsPage: DialogsPageType\r\n    Sidebar: SidebarType\r\n}\r\n\r\nexport type SidebarType = {}\r\n\r\n\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    getState: () => RootStateType\r\n    _onChange: () => void\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nlet store: StoreType = {\r\n    _state: {\r\n        ProfilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you?', likesCount: 23},\r\n                {id: 2, message: \"It's my first post\", likesCount: 14},\r\n                {id: 3, message: \"BalBla\", likesCount: 14},\r\n                {id: 4, message: \"DaDa\", likesCount: 14}\r\n            ],\r\n            profile: null,\r\n            status: ''\r\n        },\r\n        DialogsPage: {\r\n            messages: [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How is your it-kamasutra?\"},\r\n                {id: 3, message: \"Yo\"},\r\n                {id: 4, message: \"Yo\"},\r\n                {id: 5, message: \"Yo\"}\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: \"Dimych\"},\r\n                {id: 2, name: \"Andrey\"},\r\n                {id: 3, name: \"Sveta\"},\r\n                {id: 4, name: \"Sasha\"},\r\n                {id: 5, name: \"Victor\"},\r\n                {id: 6, name: \"Valera\"}\r\n            ]\r\n        },\r\n        Sidebar: {}\r\n    },\r\n    _onChange() {\r\n        console.log(\"state changed\");\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._onChange = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.ProfilePage = profileReducer(this._state.ProfilePage, action)\r\n        this._state.DialogsPage = dialogsReducer(this._state.DialogsPage, action)\r\n        this._state.Sidebar = sidebarReducer(this._state.Sidebar, action)\r\n        this._onChange();\r\n    }\r\n}\r\n\r\n\r\n","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\utils\\validators\\validators.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\app-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-selectors.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":1,"column":9,"nodeType":"200","messageId":"201","endLine":1,"endColumn":22},{"ruleId":"198","severity":1,"message":"202","line":4,"column":18,"nodeType":"200","messageId":"201","endLine":4,"endColumn":23},{"ruleId":"198","severity":1,"message":"203","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":14},{"ruleId":"198","severity":1,"message":"204","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":15},{"ruleId":"198","severity":1,"message":"204","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":15},{"ruleId":"198","severity":1,"message":"204","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":15},{"ruleId":"198","severity":1,"message":"205","line":6,"column":9,"nodeType":"200","messageId":"201","endLine":6,"endColumn":17},{"ruleId":"198","severity":1,"message":"206","line":17,"column":6,"nodeType":"200","messageId":"201","endLine":17,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":22,"column":21,"nodeType":"209","endLine":22,"endColumn":60},{"ruleId":"198","severity":1,"message":"210","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":43,"column":33,"nodeType":"209","endLine":44,"endColumn":73},{"ruleId":"207","severity":1,"message":"208","line":7,"column":9,"nodeType":"209","endLine":7,"endColumn":28},{"ruleId":"198","severity":1,"message":"211","line":4,"column":9,"nodeType":"200","messageId":"201","endLine":4,"endColumn":20},{"ruleId":"198","severity":1,"message":"212","line":4,"column":22,"nodeType":"200","messageId":"201","endLine":4,"endColumn":32},{"ruleId":"198","severity":1,"message":"204","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":15},{"ruleId":"198","severity":1,"message":"213","line":3,"column":9,"nodeType":"200","messageId":"201","endLine":3,"endColumn":23},{"ruleId":"194","replacedBy":"214"},{"ruleId":"196","replacedBy":"215"},{"ruleId":"198","severity":1,"message":"216","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":13},{"ruleId":"198","severity":1,"message":"217","line":60,"column":5,"nodeType":"200","messageId":"201","endLine":60,"endColumn":21},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"@typescript-eslint/no-unused-vars","'RootStateType' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Navbar' is defined but never used.","'classes' is defined but never used.","'Redirect' is defined but never used.","'NewMessageBodyType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'ActionTypes' is defined but never used.","'FormAction' is defined but never used.","'ReactComponent' is defined but never used.",["218"],["219"],"'thunk' is defined but never used.","'store' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]