[{"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\index.tsx":"1","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\serviceWorker.ts":"2","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\redux-store.ts":"3","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\App.tsx":"4","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\dialogs-reducer.ts":"5","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\profile-reducer.ts":"6","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-reducer.ts":"7","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\sidebar-reducer.ts":"8","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\Header.tsx":"9","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Navbar\\Navbar.tsx":"10","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\News\\News.tsx":"11","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\Profile.tsx":"12","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogsContainer.tsx":"13","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Music\\Music.tsx":"14","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Settings\\Settings.tsx":"15","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Dialogs.tsx":"16","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"17","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\MyPostsContainer.tsx":"18","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"19","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Message\\Message.tsx":"20","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"21","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"22","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\Users.tsx":"24"},{"size":715,"mtime":1607082820977,"results":"25","hashOfConfig":"26"},{"size":5295,"mtime":1607086573970,"results":"27","hashOfConfig":"26"},{"size":631,"mtime":1607444042505,"results":"28","hashOfConfig":"26"},{"size":1320,"mtime":1607444323098,"results":"29","hashOfConfig":"26"},{"size":1449,"mtime":1607084197111,"results":"30","hashOfConfig":"26"},{"size":1353,"mtime":1607084808627,"results":"31","hashOfConfig":"26"},{"size":1751,"mtime":1608538810963,"results":"32","hashOfConfig":"26"},{"size":252,"mtime":1606322178626,"results":"33","hashOfConfig":"26"},{"size":318,"mtime":1602682147676,"results":"34","hashOfConfig":"26"},{"size":1196,"mtime":1607692870293,"results":"35","hashOfConfig":"26"},{"size":183,"mtime":1602851383400,"results":"36","hashOfConfig":"26"},{"size":388,"mtime":1606823289454,"results":"37","hashOfConfig":"26"},{"size":1074,"mtime":1607082820961,"results":"38","hashOfConfig":"26"},{"size":189,"mtime":1602851387551,"results":"39","hashOfConfig":"26"},{"size":201,"mtime":1602851984739,"results":"40","hashOfConfig":"26"},{"size":1635,"mtime":1607082820977,"results":"41","hashOfConfig":"26"},{"size":421,"mtime":1602962803056,"results":"42","hashOfConfig":"26"},{"size":1162,"mtime":1607082820961,"results":"43","hashOfConfig":"26"},{"size":460,"mtime":1603301249975,"results":"44","hashOfConfig":"26"},{"size":281,"mtime":1603033794754,"results":"45","hashOfConfig":"26"},{"size":1366,"mtime":1607082820993,"results":"46","hashOfConfig":"26"},{"size":473,"mtime":1603181147095,"results":"47","hashOfConfig":"26"},{"size":1349,"mtime":1608538810972,"results":"48","hashOfConfig":"26"},{"size":2303,"mtime":1608540540112,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"43wit1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\index.tsx",[],["109","110"],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\serviceWorker.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\redux-store.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\App.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\dialogs-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\profile-reducer.ts",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\users-reducer.ts",["111"],"import {ActionsTypes, UsersPageType} from \"./store\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nexport type UserType = {\r\n    id: number\r\n    photos: {\r\n        \"small\": string,\r\n        \"large\": string\r\n    }\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n}\r\n\r\nexport type InitialUsersPageType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0\r\n}\r\n\r\nconst usersReducer = (state: InitialUsersPageType = initialState, action: ActionsTypes): InitialUsersPageType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [...state.users, ...action.users]}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userId: number) => ({type: FOLLOW, userId}) as const\r\nexport const unfollowAC = (userId: number) => ({type: UNFOLLOW, userId}) as const\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users}) as const\r\n\r\nexport default usersReducer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\redux\\sidebar-reducer.ts",["112"],"import {ActionsTypes, RootStateType, SidebarType} from \"./store\";\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state: SidebarType = initialState, action: ActionsTypes): SidebarType => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Header\\Header.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\News\\News.tsx",["113"],"import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\n\r\nfunction News() {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\Profile.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogsContainer.tsx",["114"],"import React from \"react\";\r\nimport {sendMessageAC, updateNewMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport {DialogsPageType} from \"../../redux/store\";\r\n\r\ntype mapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: RootStateRedux):mapStatePropsType  => {\r\n    return {\r\n        dialogsPage: state.DialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchPropsType => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyAC(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageAC())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect<mapStatePropsType,mapDispatchPropsType,{}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Music\\Music.tsx",["115"],"import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\n\r\nfunction Music() {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Settings\\Settings.tsx",["116"],"import React from \"react\";\r\nimport classes from \"./Settings.module.css\"\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\MyPostsContainer.tsx",["117"],"import React from \"react\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostAC, updateNewPostTextAC} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"../../../../redux/store\";\r\nimport {RootStateRedux} from \"../../../../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): mapStatePropsType => {\r\n    return {\r\n        posts: state.ProfilePage.posts,\r\n        newPostText: state.ProfilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchPropsType => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextAC(text);\r\n            dispatch(action)\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["118"],"import React, {RefObject} from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport {ActionsTypes, PostType} from \"../../../redux/store\";\r\n\r\n\r\ntype PostsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    updateNewPostText: (text: string) => void\r\n    addPost: () => void\r\n\r\n}\r\n\r\nfunction MyPosts(props: PostsType) {\r\n\r\n    let postsElement = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement: RefObject<HTMLTextAreaElement> = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current.value;\r\n            props.updateNewPostText(text);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3> My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["119"],"import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\n\r\ntype PostsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostsType) {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://images.app.goo.gl/5ZCf4bKyMsx3XMHf7'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\UsersContainer.tsx",["120"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport {Dispatch} from 'redux'\r\nimport {followAC, setUsersAC, unfollowAC, UserType} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\n\r\ntype mapStatePropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n}\r\n\r\nexport type UsersPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateRedux): mapStatePropsType => {\r\n    return {\r\n        users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount: state.UsersPage.totalUsersCount\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(Users)","D:\\it-uncubator\\socialNetwork\\soc-network-ts\\src\\components\\Users\\Users.tsx",["121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":23,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"130","line":1,"column":23,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"131","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"132","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"131","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"131","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"132","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"133","line":4,"column":9,"nodeType":"128","messageId":"129","endLine":4,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":13,"column":13,"nodeType":"136","endLine":13,"endColumn":69},{"ruleId":"126","severity":1,"message":"132","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":50,"column":21,"nodeType":"136","endLine":50,"endColumn":115},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'UsersPageType' is defined but never used.","Identifier","unusedVar","'RootStateType' is defined but never used.","'classes' is defined but never used.","'React' is defined but never used.","'ActionsTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]