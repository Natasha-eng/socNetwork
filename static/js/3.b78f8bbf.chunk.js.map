{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","../node_modules/@fortawesome/free-regular-svg-icons/faThumbsUp.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/Post/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","Auth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","module","exports","Object","defineProperty","value","iconName","ligatures","unicode","svgPathData","definition","prefix","icon","faThumbsUp","width","height","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","profileInfoStyles","profileInfoItems","statusStyles","statusContainer","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","profileItemLeft","profileImg","src","photos","large","fullName","statusMark","profileItemRight","jobDescription","profileInfoItem","lookingForAJobDescription","aboutMeInfo","aboutMe","contacts","Preloader","Post","alt","postStyle","postMessage","message","likeItem","fa","likesCount","maxLength50","maxLengthCreator","MyPosts","React","memo","postsElement","posts","map","p","postStyles","post","id","myPostsStyles","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","formField","Field","component","Textarea","placeholder","name","validate","required","buttonForm","MyPostsContainer","ProfilePage","dispatch","addPostAC","Profile","profileStyles","profileContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","withRouter"],"mappings":"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","file":"static/js/3.b78f8bbf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateRedux} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport interface withAuthRedirectType {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootStateRedux) => ({\r\n    isAuth: state.Auth.isAuth\r\n} as withAuthRedirectType)\r\n\r\nexport function withAuthRedirect <WCP>(WrappedComponent: React.ComponentType<WCP>){\r\n\r\n    const RedirectComponent:React.FC<withAuthRedirectType & {} > = (props) => {\r\n\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <WrappedComponent {...restProps as WCP} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<withAuthRedirectType, {}, WCP, RootStateRedux >\r\n    (mapStateToPropsForRedirect, {})(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ouctn\",\"profileItemLeft\":\"ProfileInfo_profileItemLeft__20l_r\",\"profileItemRight\":\"ProfileInfo_profileItemRight__1h1Y3\",\"profileImg\":\"ProfileInfo_profileImg__13Bxu\",\"statusMark\":\"ProfileInfo_statusMark__ijyGc\",\"jobDescription\":\"ProfileInfo_jobDescription__3YClo\",\"profileInfoItem\":\"ProfileInfo_profileInfoItem__36NGh\",\"fullName\":\"ProfileInfo_fullName__2DoR2\",\"contacts\":\"ProfileInfo_contacts__3wyFn\",\"aboutMeInfo\":\"ProfileInfo_aboutMeInfo__3BGg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2KBdE\",\"postMessage\":\"Post_postMessage__1yBy-\",\"likeItem\":\"Post_likeItem__1fBVP\",\"fa\":\"Post_fa__mflSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"ProfileStatus_statusContainer__1jrZn\"};","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'far';\nvar iconName = 'thumbs-up';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f164';\nvar svgPathData = 'M466.27 286.69C475.04 271.84 480 256 480 236.85c0-44.015-37.218-85.58-85.82-85.58H357.7c4.92-12.81 8.85-28.13 8.85-46.54C366.55 31.936 328.86 0 271.28 0c-61.607 0-58.093 94.933-71.76 108.6-22.747 22.747-49.615 66.447-68.76 83.4H32c-17.673 0-32 14.327-32 32v240c0 17.673 14.327 32 32 32h64c14.893 0 27.408-10.174 30.978-23.95 44.509 1.001 75.06 39.94 177.802 39.94 7.22 0 15.22.01 22.22.01 77.117 0 111.986-39.423 112.94-95.33 13.319-18.425 20.299-43.122 17.34-66.99 9.854-18.452 13.664-40.343 8.99-62.99zm-61.75 53.83c12.56 21.13 1.26 49.41-13.94 57.57 7.7 48.78-17.608 65.9-53.12 65.9h-37.82c-71.639 0-118.029-37.82-171.64-37.82V240h10.92c28.36 0 67.98-70.89 94.54-97.46 28.36-28.36 18.91-75.63 37.82-94.54 47.27 0 47.27 32.98 47.27 56.73 0 39.17-28.36 56.72-28.36 94.54h103.99c21.11 0 37.73 18.91 37.82 37.82.09 18.9-12.82 37.81-22.27 37.81 13.489 14.555 16.371 45.236-5.21 65.62zM88 432c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faThumbsUp = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__i-OIe\",\"form\":\"MyPosts_form__IDQha\",\"buttonForm\":\"MyPosts_buttonForm__2op7e\",\"posts\":\"MyPosts_posts__3KCWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3rQfL\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport statusStyles from \"./ProfileStatus.module.css\";\r\nimport profileInfoStyles from\"./ProfileInfo.module.css\";\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={`${profileInfoStyles.profileInfoItems} ${statusStyles.statusContainer}`}>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport profileInfoStyles from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport {UserProfileResponseType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileResponseType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoPropsType) {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n\r\n        <div className={profileInfoStyles.descriptionBlock}>\r\n            <div className={profileInfoStyles.profileItemLeft}>\r\n                <div className={`${profileInfoStyles.profileInfoItems} ${profileInfoStyles.profileImg}`}>\r\n                    <img src={props.profile.photos.large}/>\r\n                </div>\r\n\r\n                <div className={` ${profileInfoStyles.profileInfoItems} ${profileInfoStyles.fullName}`}>{props.profile.fullName}</div>\r\n                <div className={profileInfoStyles.statusMark}>Write your status:</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n            <div className={profileInfoStyles.profileItemRight}>\r\n                <div className= {profileInfoStyles.jobDescription}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>Looking for a job:</div>\r\n                    <div>{props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n\r\n                <div className= {profileInfoStyles.aboutMeInfo}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>About me:</div>\r\n                    <div>{props.profile.aboutMe}</div>\r\n                </div>\r\n\r\n                <div className={profileInfoStyles.contacts}>\r\n                    <div className={profileInfoStyles.profileInfoItem}>My contacts:</div>\r\n                    {/*<div>{props.profile.contacts}</div>*/}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport postStyle from './Post.module.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faThumbsUp} from \"@fortawesome/free-regular-svg-icons/faThumbsUp\";\r\n\r\n\r\ntype PostsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nfunction Post(props: PostsType) {\r\n    return (\r\n        <>\r\n            <img src='https://images.app.goo.gl/5ZCf4bKyMsx3XMHf7' alt = 'userImg'/>\r\n            <div className={postStyle.postMessage}>{props.message}</div>\r\n            <div className={postStyle.likeItem}>\r\n                <span><FontAwesomeIcon icon={faThumbsUp} className={postStyle.fa}/> {props.likesCount}</span>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport myPostsStyles from \"./MyPosts.module.css\";\r\nimport {PostType} from \"../../../redux/store\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport postStyles from \"./Post/Post.module.css\";\r\n\r\n\r\ntype PostsType = {\r\n    posts: Array<PostType>\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\ntype addPostPropsType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst MyPosts = React.memo((props: PostsType) => {\r\n\r\n    let postsElement = props.posts.map(p => <div className={postStyles.post}><Post key={p.id}\r\n                                                                                   message={p.message}\r\n                                                                                   likesCount={p.likesCount}/>\r\n    </div>);\r\n\r\n    let onAddPost = (values: addPostPropsType) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={myPostsStyles.postsBlock}>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={myPostsStyles.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport type AddPostFormValuesType = {\r\n    newPostText: string\r\n}\r\n\r\ntype PropsType = {}\r\n\r\nfunction AddNewPostForm(props: InjectedFormProps<AddPostFormValuesType, PropsType> & PropsType) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={myPostsStyles.form}>\r\n            <div className={myPostsStyles.formField}>\r\n                <Field component={Textarea} placeholder={\"Write your thoughts...\"} name=\"newPostText\"\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <button className={myPostsStyles.buttonForm}>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm<AddPostFormValuesType, PropsType>({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React, {Dispatch} from \"react\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostAC} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"../../../../redux/store\";\r\nimport {RootStateRedux} from \"../../../../redux/redux-store\";\r\n\r\ntype mapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): mapStatePropsType => {\r\n    return {\r\n        posts: state.ProfilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>): mapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\nimport {UserProfileResponseType} from \"../../redux/profile-reducer\";\r\nimport profileStyles from \"./Profile.module.css\";\r\n\r\ntype ProfileType = {\r\n    profile: UserProfileResponseType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nfunction Profile(props: ProfileType) {\r\n    return (\r\n        <div className={profileStyles.profileContainer}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateRedux} from \"../../redux/redux-store\";\r\nimport {getUserStatus, getUserProfile, updateStatus, UserProfileResponseType} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapStatePropsType = {\r\n    profile: UserProfileResponseType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType\r\n\r\nexport type ProfilePropsType = mapStatePropsType & mapDispatchPropsType;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId: number | string = this.props.match.params.userId;\r\n\r\n        if (!userId && this.props.authorizedUserId) {\r\n            userId = +this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(+userId);\r\n        this.props.getUserStatus(+userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateRedux): mapStatePropsType => ({\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    authorizedUserId: state.Auth.userId,\r\n    isAuth: state.Auth.isAuth\r\n})\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(ProfileContainer);*/\r\n\r\n//let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>\r\n// (mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n/*withRouter(connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, {getUserProfile})(AuthRedirectComponent));*/\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<mapStatePropsType, mapDispatchPropsType, {}, RootStateRedux>(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}